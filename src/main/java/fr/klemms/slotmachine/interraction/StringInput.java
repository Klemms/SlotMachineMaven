package fr.klemms.slotmachine.interraction;

import fr.klemms.slotmachine.ChatContent;
import fr.klemms.slotmachine.SlotPlugin;
import fr.klemms.slotmachine.placeholders.Variables;
import fr.klemms.slotmachine.translation.Language;
import fr.klemms.slotmachine.utils.ItemStackUtil;
import fr.klemms.slotmachine.utils.PlayerHeadsUtil;
import net.wesjd.anvilgui.AnvilGUI;
import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class StringInput {

	public static void inputString(Player player, String title, String placeholder, StringInputCallback callback, boolean allowNoChange, boolean showPlaceholders) {
		inputString(player, title, placeholder, callback, allowNoChange, showPlaceholders, false);
	}

	public static void inputString(Player player, String title, String placeholder, StringInputCallback callback, boolean allowNoChange, boolean showPlaceholders, boolean showPlaceholdersAPI) {
		if (Bukkit.getPluginManager().isPluginEnabled("AdvancedEnchantments")) {
			player.sendMessage(ChatContent.RED + SlotPlugin.CHAT_PREFIX + "WARNING ! You seem to have installed " + ChatContent.GOLD + "[AdvancedEnchantments]" + ChatContent.RED + ". This plugin interferes with Anvil GUIs generated by other plugins. Functionality may not work.");
		}

		List<String> variableLore = new ArrayList<String>();

		if (showPlaceholdersAPI) {
			variableLore.add(" ");
			variableLore.add(Language.translate("command.slotmachineaction.placeholderAPI"));
			variableLore.add(" ");
		}

		for (Variables var : Variables.values()) {
			variableLore.add(ChatContent.DARK_PURPLE + "$" + var.variableName + ChatContent.DARK_AQUA + " -> " + ChatContent.AQUA + Language.translate(var.variableDescription));
		}

		new AnvilGUI.Builder()
				.plugin(SlotPlugin.pl)
				.title(title)
				.itemLeft(ItemStackUtil.changeItemStackName(new ItemStack(Material.COMMAND_BLOCK), ChatContent.GOLD + "Validate with the green button"))
				.itemRight(showPlaceholders ? ItemStackUtil.setItemStackLore(ItemStackUtil.changeItemStackName(new ItemStack(PlayerHeadsUtil.INFOS), ChatContent.GOLD + "You can use those placeholders :"), variableLore) : null)
				.itemOutput(ItemStackUtil.changeItemStackName(new ItemStack(PlayerHeadsUtil.CHECKMARK), "Validate"))
				.text(placeholder)
				.onClick((slot, stateSnapshot) -> {
					if (slot != AnvilGUI.Slot.OUTPUT) {
						return Collections.emptyList();
					}

					if (!stateSnapshot.getText().trim().isEmpty() && (allowNoChange || !stateSnapshot.getText().equals(placeholder))) {
						return Collections.singletonList(
                                AnvilGUI.ResponseAction.run(() -> {
									callback.callback(stateSnapshot.getText().trim());
                                })
                        );
					}

					return Collections.emptyList();
				})
				.open(player);
	}
}
